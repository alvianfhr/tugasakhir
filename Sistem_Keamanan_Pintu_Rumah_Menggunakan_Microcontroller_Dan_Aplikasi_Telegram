byte sda = D10; //
byte rst = D9;
byte PIR = D2;

#ifdef ESP32
  #include <WiFi.h>
#else
  #include <ESP8266WiFi.h>
#endif
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>   // Universal Telegram Bot Library written by Brian Lough: https://github.com/witnessmenow/Universal-Arduino-Telegram-Bot
#include <ArduinoJson.h>
#include<KRrfid.h>


#define ledm D3      // LED Merah
#define ledh D1      // LED Hijau
#define buz D14      // Buzzer
#define rel D8       // Relay
bool relStatus = LOW;


const char* ssid = "alvianpc";
const char* password = "11111111";

#define BOTtoken "6186855970:AAE7q4RNHhWiFWSynoY72Tn_Hcslh_2dFvk"
#define CHAT_ID "920253360"

#ifdef ESP8266
  X509List cert(TELEGRAM_CERTIFICATE_ROOT);
#endif

WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);

int botRequestDelay = 1000;
unsigned long lastTimeBotRan;

//------------------------------------------------------------------------

void handleNewMessages(int numNewMessages) {
 Serial.println("handleNewMessages");
  Serial.println(String(numNewMessages));

  for (int i=0; i<numNewMessages; i++) {
    // Chat id of the requester
    String chat_id = String(bot.messages[i].chat_id);
    if (chat_id != CHAT_ID){
      bot.sendMessage(chat_id, "Unauthorized user", "");
      continue;
    }
    
    // Print the received message
    String text = bot.messages[i].text;
    Serial.println(text);

    String from_name = bot.messages[i].from_name;

    
  long state  = digitalRead(PIR);

    if(state == HIGH) //pir deteksi gerakan
  {
    Serial.println("Gerakan Terdeteksi");
    bot.sendMessage(chat_id, "!! GERAKAN TERDETEKSI !!");
  }
  delay(1000);
  //return;
  
  String tagsukses1 = "Kartu 1 Terdeteksi";
  String tagsukses2 = "Kartu 2 Terdeteksi";
  String taggagal = "Kartu Tidak Terdaftar Terdeteksi";
  
  getTAG();
  rfidBegin();
  
  if (TAG == "79213722") {
    bot.sendMessage(chat_id, tagsukses1, "");
  //Serial.println("Notifikasi Kartu 1");
  }
  
  else if (TAG == "13315740") {
    bot.sendMessage(chat_id, tagsukses2, "");
  //Serial.println("Notifikasi Kartu 2");
  }
  
  else if (TAG != ""){
    bot.sendMessage(chat_id, taggagal, "");
  }
  
  
    if (text == "/start") {
      String welcome = "Welcome, " + from_name + ".\n";
      welcome += "Use the following commands to control your outputs.\n\n";
      welcome += "/door_open membuka pintu \n";
      welcome += "/door_close menutup pintu \n";
      //welcome += "/status memeriksa keadaan pintu \n";
      bot.sendMessage(chat_id, welcome, "");
    }

    if (text == "/door_open") {
      bot.sendMessage(chat_id, "Pintu Terbuka", "");
      //pinMode(rel,HIGH);
      relStatus = LOW;
      digitalWrite(rel, relStatus);
    }
    
    if (text == "/door_close") {
      bot.sendMessage(chat_id, "Pintu Tertutup", "");
      //pinMode(rel,LOW);
      relStatus = HIGH;
      digitalWrite(rel, relStatus);
    }
    
    /*if (text == "/state") {
      if (digitalRead(rel)){
        bot.sendMessage(chat_id, "Pintu Terbuka", "");
      }
      else{
        bot.sendMessage(chat_id, "Pintu Tertutup", "");
      }
    }*/
     
  
  }
}

// --------------------------------------------------------------------------
  

void setup() {
  Serial.begin(115200);

  #ifdef ESP8266
    configTime(0, 0, "pool.ntp.org");      // get UTC time via NTP
    client.setTrustAnchors(&cert); // Add root certificate for api.telegram.org
  #endif
  
  rfidBegin();
  pinMode(PIR,INPUT);
  pinMode(ledm,OUTPUT);
  pinMode(ledh,OUTPUT);  
  pinMode(buz,OUTPUT);
  pinMode(rel,OUTPUT);

  digitalWrite(rel, relStatus);

  // Connect to Wi-Fi
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  #ifdef ESP32
    client.setCACert(TELEGRAM_CERTIFICATE_ROOT); // Add root certificate for api.telegram.org
  #endif
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  // Print ESP32 Local IP Address
  Serial.println(WiFi.localIP());
}

//---------------------------------------------------------------------

void loop() {
  kartu();
  //gerakan();
  
  if (millis() > lastTimeBotRan + botRequestDelay)  {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

    while(numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
    lastTimeBotRan = millis();
  }

}

void kartu() {
  getTAG();
//String chat_id = String(bot.messages[i].chat_id);
  if (TAG == "79213722") {
    Serial.println("ID Terdaftar : " + TAG);
    TAG = "";
    digitalWrite(ledh,HIGH);
    digitalWrite(buz,HIGH);
    digitalWrite(rel,LOW);
    delay(500);
    digitalWrite(ledh,LOW);
    digitalWrite(buz,LOW);
    //bot.sendMessage(chat_id, tagsukses, "");
    delay(2000);
    digitalWrite(rel,HIGH);
  }
  
  else if (TAG == "13315740") {
    Serial.println("ID Terdaftar : " + TAG);
    TAG = "";
    digitalWrite(ledh, HIGH);
    digitalWrite(buz, HIGH);
    digitalWrite(rel, LOW);
    delay(500);
    digitalWrite(ledh,LOW);
    digitalWrite(buz,LOW);
    delay(2000);
    digitalWrite(rel,HIGH);
  }

  else if (TAG != "")   {
    Serial.print("ID Tidak Terdaftar : ");
    Serial.println(TAG);
    TAG = "";
    digitalWrite(ledm,HIGH);
    digitalWrite(buz,HIGH);
    delay(2000);
    digitalWrite(ledm,LOW);
    digitalWrite(ledh,LOW);
    digitalWrite(buz,LOW);
  }
  delay(1000);
}

//-------------------------------------------------------------------
/*void notif(){
 getTAG();
  if (TAG == "79213722") {
    bot.sendMessage(chat_id, "Kartu 1 Terdeteksi", "");
    Serial.println("Notifikasi Kartu 1");
  }
}*/
